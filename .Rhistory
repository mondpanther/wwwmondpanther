clook=read.csv("https://www.dropbox.com/s/3hb2kol78zgb4h0/ccodelook.csv?dl=1")
df=df %>% left_join(clook,by=c("CODE"="ccode3")) %>% left_join(rta %>% filter(all>0),by="ccode")
# appearance
#Set country boundaries as light grey
l <- list(color = toRGB("#d1d1d1"), width = 0.5)
#Specify map projection and options
g <- list(
showframe = FALSE,
showcoastlines = FALSE,
projection = list(type = 'orthographic'),
resolution = '100',
showcountries = TRUE,
countrycolor = '#d1d1d1',
showocean = TRUE,
oceancolor = '#c9d2e0',
showlakes = TRUE,
lakecolor = '#99c0db',
showrivers = TRUE,
rivercolor = '#99c0db')
df=df %>% mutate(toplot=(cleanshw/( sum(allclean,na.rm=T)/sum(all,na.rm=T)*100)-1)*100)
df=df %>% mutate(toplot=cleanshw)
drsimonj_colors <- c(
`red`        = "#d11141",
`green`      = "#00b159",
`blue`       = "#00aedb",
`orange`     = "#f37735",
`yellow`     = "#ffc425",
`light grey` = "#cccccc",
`dark grey`  = "#8c8c8c")
drsimonj_cols <- function(...) {
cols <- c(...)
if (is.null(cols))
return (drsimonj_colors)
drsimonj_colors[cols]
}
drsimonj_palettes <- list(
`main`  = drsimonj_cols("blue", "green", "yellow"),
`cool`  = drsimonj_cols("blue", "green"),
`hot`   = drsimonj_cols("yellow", "orange", "red"),
`mixed` = drsimonj_cols("blue", "green", "yellow", "orange", "red"),
`grey`  = drsimonj_cols("light grey", "dark grey")
)
drsimonj_pal <- function(palette = "main", reverse = FALSE, ...) {
pal <- drsimonj_palettes[[palette]]
if (reverse) pal <- rev(pal)
colorRampPalette(pal, ...)
}
spet=drsimonj_pal("cool")(20)
#library(inlmisc)
#spet=inlmisc::GetTolColors(34, blind = "tritan")
library(jcolors)
spet=jcolors('pal11')
#library(dichromat)
library(shiny)
p <- plot_geo(df) %>%
add_trace(z = ~toplot, color = ~(toplot), colors = spet,
text = ~COUNTRY, locations = ~CODE, marker = list(line = l)) %>%
colorbar(title = 'Share of Cleantech Innovaion in %') %>%
layout(title = '', geo = g)
library(knitr)
knit_hooks$set(customcap= function(before, options, envir) {
if(!before) {
paste('<p class="caption"> (\\#fig:globe)',options$customcap,"</p>",sep="")
}
})
#Create some data to use in the heatmap - here we are creating a random "value" for each county (by id)
mydata <- data.frame(id=unique(mapdata$id), value=sample(c(0:100), length(unique(mapdata$id)), replace = TRUE))
#Join mydata with mapdata
nuts2=nuts2 %>% mutate(cleanOinnos=cleaninnos/innos, covidOinnos=covidinnos/innos,innos_sh=innos/sum(innos,na.rm = TRUE))
df <- mapdata %>% left_join( nuts2, by=c("id"="NUTS215NM"))
nuts2mapper=function(df,value,label){
#Create the heatmap using the ggplot2 package
df['value']=df[value]
gg <- ggplot() + geom_polygon(data = df, aes(x = long, y = lat, group = group, fill = value), color = NA, size = 0.1)
gg <- gg + scale_fill_gradient2(low = "black", mid = "blue", high = "green", na.value = "white") + labs(fill = label)
gg <- gg + coord_fixed(1)
gg <- gg + theme_minimal()
gg <- gg + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), )
gg <- gg + theme(axis.title.x=element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank())
gg <- gg + theme(axis.title.y=element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank())
#print(gg)
return(gg)
}
p1=nuts2mapper(df,value="cleanOinnos",label="Share of clean (in %)")
p2=nuts2mapper(df,value="covidOinnos",label="Share of clean (in %)")
p3=nuts2mapper(df,value="innos_sh",label="Share of region in total UK innovations (in %)")
#p1=nuts2_map(nuts3dat$cleanOinnos,  "%",nuts3dat$nuts3,fstring="%2.2f")
#p2=nuts2_map(nuts3dat$covidOinnos,  "%",nuts3dat$nuts3,fstring="%2.2f")
#p3=nuts2_map(nuts3dat$innos_shares, "%",nuts3dat$nuts3,fstring="%2.2f")
library(cowplot)
library(ggplot2)
library(ggplot2)
p4=ggplot(df, aes(x=innos_sh))+geom_point(aes(y=covidOinnos,color="RTA Covid"))+
geom_point(aes(y=cleanOinnos,color="RTA Clean+Grey")) +theme_minimal()+
geom_smooth(method = "lm", se = T,aes(y=covidOinnos,color="RTA Covid")) +
geom_smooth(method = "lm", se = T,aes(y=cleanOinnos,color="RTA Clean+Grey"))+ylab("RTA")+xlab("Share of UK innovation")
plot_grid(p1, p2, p3,gg,labels=c("Cleantech RTA","COVID related RTA", "Distribution of Innovation"),
label_size=10,nrow=2,ncol=2,rel_widths = c(1,1,1,1),rel_heights=c(1,1))
p4=ggplot(df, aes(x=innos_sh))+geom_point(aes(y=covidOinnos,color="RTA Covid"))+
geom_point(aes(y=cleanOinnos,color="RTA Clean+Grey")) +theme_minimal()+
geom_smooth(method = "lm", se = T,aes(y=covidOinnos,color="RTA Covid")) +
geom_smooth(method = "lm", se = T,aes(y=cleanOinnos,color="RTA Clean"))+ylab("RTA")+xlab("Share of UK innovation")
plot_grid(p1, p2, p3,44,labels=c("Cleantech RTA","COVID related RTA", "Distribution of Innovation"),
label_size=10,nrow=2,ncol=2,rel_widths = c(1,1,1,1),rel_heights=c(1,1))
library(ggplot2)
p4=ggplot(df, aes(x=innos_sh))+geom_point(aes(y=covidOinnos,color="RTA Covid"))+
geom_point(aes(y=cleanOinnos,color="RTA Clean+Grey")) +theme_minimal()+
geom_smooth(method = "lm", se = T,aes(y=covidOinnos,color="RTA Covid")) +
geom_smooth(method = "lm", se = T,aes(y=cleanOinnos,color="RTA Clean"))+ylab("RTA")+xlab("Share of UK innovation")
p4
p=ggplot(nuts2, aes(x=innos_sh))+geom_point(aes(y=covidOinnos,color="RTA Covid"))+
geom_point(aes(y=cleanOinnos,color="RTA Clean+Grey")) +theme_minimal()+
geom_smooth(method = "lm", se = T,aes(y=covidOinnos,color="RTA Covid")) +
geom_smooth(method = "lm", se = T,aes(y=cleanOinnos,color="RTA Clean"))+ylab("RTA")+xlab("Share of UK innovation")
p
library(ggplot2)
p=ggplot(nuts2, aes(x=innos_sh))+geom_point(aes(y=covidOinnos,color="Share Covid"))+
geom_point(aes(y=cleanOinnos,color="Share Clean")) +theme_minimal()+
geom_smooth(method = "lm", se = T,aes(y=covidOinnos,color="Share Covid")) +  labs(color = "")
geom_smooth(method = "lm", se = T,aes(y=cleanOinnos,color="Share Clean"))+ylab("RTA")+xlab("Share of UK innovation")
library(ggplot2)
p=ggplot(nuts2, aes(x=innos_sh))+geom_point(aes(y=covidOinnos,color="Share Covid"))+
geom_point(aes(y=cleanOinnos,color="Share Clean")) +theme_minimal()+
geom_smooth(method = "lm", se = T,aes(y=covidOinnos,color="Share Covid")) +  labs(color = "") +
geom_smooth(method = "lm", se = T,aes(y=cleanOinnos,color="Share Clean"))+ylab("RTA")+xlab("Share of UK innovation")
p
library(ggplot2)
p=ggplot(nuts2, aes(x=innos_sh))+geom_point(aes(y=covidOinnos,color="Share Covid"))+
geom_point(aes(y=cleanOinnos,color="Share Clean")) +theme_minimal()+
geom_smooth(method = "lm", se = T,aes(y=covidOinnos,color="Share Covid")) +  labs(color = "") +
geom_smooth(method = "lm", se = T,aes(y=cleanOinnos,color="Share Clean"))+ylab("%")+xlab("Share of UK innovation in %")
plot_grid(p1, p2, p3,p4,labels=c("Cleantech RTA","COVID related RTA", "Distribution of Innovation"),
label_size=10,nrow=2,ncol=2,rel_widths = c(1,1,1,1),rel_heights=c(1,1))
View(nuts2)
#Load the shapefile - make sure you change the filepath to where you saved the shapefiles
shapefile <- readOGR(dsn="NUTS_Level_2__January_2015__Boundaries-shp", layer="NUTS_Level_2__January_2015__Boundaries")
xlook=read_csv("https://www.dropbox.com/s/fidc1sr298imhku/LAU2_to_LAU1_to_NUTS3_to_NUTS2_to_NUTS1__December_2018__Lookup_in_United_Kingdom.csv?dl=1")
xlook=xlook %>% select(NUTS318CD,NUTS118NM,NUTS318NM,NUTS218CD,NUTS218NM,NUTS118CD,NUTS118NM) distinct(NUTS318CD, .keep_all = T)
xlook=xlook %>% select(NUTS318CD,NUTS118NM,NUTS318NM,NUTS218CD,NUTS218NM,NUTS118CD,NUTS118NM) %>% distinct(NUTS318CD, .keep_all = T)
View(xlook)
View(xlook)
View(nuts3dat)
nuts2=nuts3dat %>%
select(innos,nuts2,covidinnos,cleaninnos, covidinnos_shares)%>%
distinct(geo_code,.keep_all=TRUE)
nuts2=nuts3dat %>%
select(innos,nuts2,geo_code,covidinnos,cleaninnos, covidinnos_shares)%>%
distinct(geo_code,.keep_all=TRUE)
nuts2=nuts2 %>% left_join(xlook,by=c("geo_code"="NUTS318CD"))
View(nuts2)
View(nuts2)
#Load the shapefile - make sure you change the filepath to where you saved the shapefiles
#shapefile <- readOGR(dsn="NUTS_Level_2__January_2015__Boundaries-shp", layer="NUTS_Level_2__January_2015__Boundaries")
shapefile <- readOGR(dsn="../../Clean Growth Report 2017/code/R example/R example", layer = "nuts3_withid")
View(shapefile)
shapefile <- readOGR(dsn="NUTS_Level_2__January_2015__Boundaries-shp", layer="NUTS_Level_2__January_2015__Boundaries")
#Load the shapefile - make sure you change the filepath to where you saved the shapefiles
#shapefile <- readOGR(dsn="NUTS_Level_2__January_2015__Boundaries-shp", layer="NUTS_Level_2__January_2015__Boundaries")
shapefile <- readOGR(dsn="../../Clean Growth Report 2017/code/R example/R example", layer = "nuts3_withid")
#Reshape for ggplot2 using the Broom package
#mapdata <- tidy(shapefile, region="nuts215nm") #This might take a few minutes
mapdata <- tidy(shapefile, region="NUTS_ID") #This might take a few minutes
nuts3dat=read.csv("nuts3dat.csv")
#xlook=read_csv("https://www.dropbox.com/s/fidc1sr298imhku/LAU2_to_LAU1_to_NUTS3_to_NUTS2_to_NUTS1__December_2018__Lookup_in_United_Kingdom.csv?dl=1")
#xlook=xlook %>% select(NUTS318CD,NUTS118NM,NUTS318NM,NUTS218CD,NUTS218NM,NUTS118CD,NUTS118NM) %>% distinct(NUTS318CD, .keep_all = T)
xlook=nuts3dat %>% select(geo_code,nuts2) %>% distinct(geo_code,.keep_all = T)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(dbplyr)
library(dplyr)
library(readr)
library(lubridate)
library(readr)
nuts3dat=read.csv("nuts3dat.csv")
#xlook=read_csv("https://www.dropbox.com/s/fidc1sr298imhku/LAU2_to_LAU1_to_NUTS3_to_NUTS2_to_NUTS1__December_2018__Lookup_in_United_Kingdom.csv?dl=1")
#xlook=xlook %>% select(NUTS318CD,NUTS118NM,NUTS318NM,NUTS218CD,NUTS218NM,NUTS118CD,NUTS118NM) %>% distinct(NUTS318CD, .keep_all = T)
xlook=nuts3dat %>% select(geo_code,nuts2) %>% distinct(geo_code,.keep_all = T)
nutslook=read_csv("https://www.dropbox.com/s/4piv1p53hhloo5l/NUTS_Level_2_%28January_2015%29_Names_and_Codes_in_the_United_Kingdom.csv?dl=1")
nuts2=nuts3dat %>%
select(innos,nuts2,geo_code,covidinnos,cleaninnos, covidinnos_shares)%>%
distinct(geo_code,.keep_all=TRUE)
nuts2=nuts2 %>% mutate(cleanOinnos=cleaninnos/innos*100, covidOinnos=covidinnos/innos*100,innos_sh=innos/sum(innos,na.rm = TRUE)*100)
#nuts2=nuts2 %>% left_join(nutslook,by=c("nuts2"="NUTS215CD"))
#nuts2=nuts2 %>% left_join(xlook,by=c("geo_code"="NUTS318CD"))
rta=read.csv("rta.csv")
library(plotly)
df <- read.csv('https://raw.githubusercontent.com/plotly/datasets/master/2014_world_gdp_with_codes.csv')
df[,2] <- as.numeric(df[,2])
df[,2] <- log(df[,2])
clook=read.csv("https://www.dropbox.com/s/3hb2kol78zgb4h0/ccodelook.csv?dl=1")
df=df %>% left_join(clook,by=c("CODE"="ccode3")) %>% left_join(rta %>% filter(all>0),by="ccode")
# appearance
#Set country boundaries as light grey
l <- list(color = toRGB("#d1d1d1"), width = 0.5)
#Specify map projection and options
g <- list(
showframe = FALSE,
showcoastlines = FALSE,
projection = list(type = 'orthographic'),
resolution = '100',
showcountries = TRUE,
countrycolor = '#d1d1d1',
showocean = TRUE,
oceancolor = '#c9d2e0',
showlakes = TRUE,
lakecolor = '#99c0db',
showrivers = TRUE,
rivercolor = '#99c0db')
df=df %>% mutate(toplot=(cleanshw/( sum(allclean,na.rm=T)/sum(all,na.rm=T)*100)-1)*100)
df=df %>% mutate(toplot=cleanshw)
drsimonj_colors <- c(
`red`        = "#d11141",
`green`      = "#00b159",
`blue`       = "#00aedb",
`orange`     = "#f37735",
`yellow`     = "#ffc425",
`light grey` = "#cccccc",
`dark grey`  = "#8c8c8c")
drsimonj_cols <- function(...) {
cols <- c(...)
if (is.null(cols))
return (drsimonj_colors)
drsimonj_colors[cols]
}
drsimonj_palettes <- list(
`main`  = drsimonj_cols("blue", "green", "yellow"),
`cool`  = drsimonj_cols("blue", "green"),
`hot`   = drsimonj_cols("yellow", "orange", "red"),
`mixed` = drsimonj_cols("blue", "green", "yellow", "orange", "red"),
`grey`  = drsimonj_cols("light grey", "dark grey")
)
drsimonj_pal <- function(palette = "main", reverse = FALSE, ...) {
pal <- drsimonj_palettes[[palette]]
if (reverse) pal <- rev(pal)
colorRampPalette(pal, ...)
}
spet=drsimonj_pal("cool")(20)
#library(inlmisc)
#spet=inlmisc::GetTolColors(34, blind = "tritan")
library(jcolors)
spet=jcolors('pal11')
#library(dichromat)
library(shiny)
p <- plot_geo(df) %>%
add_trace(z = ~toplot, color = ~(toplot), colors = spet,
text = ~COUNTRY, locations = ~CODE, marker = list(line = l)) %>%
colorbar(title = 'Share of Cleantech Innovaion in %') %>%
layout(title = '', geo = g)
library(knitr)
knit_hooks$set(customcap= function(before, options, envir) {
if(!before) {
paste('<p class="caption"> (\\#fig:globe)',options$customcap,"</p>",sep="")
}
})
div(p)
library("RSQLite")
library("sqldf")
library(haven)
library(plyr)
library(doBy)
library(maps)
library(maptools)
library(rgdal)
library(gridExtra)
library(gridGraphics)
library(grid)
library(pryr)
NUTS3 <- readOGR(dsn =path.expand("../../Clean Growth Report 2017/code/R example/R example"), layer = "nuts3_withid")
nuts2_map<-function(vvv,lll,geoid,fstring="%2.0f",label=""){
# Reading in NUTS3 shapefile (in UK grid format)
#C:\Users\Ralf Martin\Dropbox\Clean Growth Report 2017\code\R example\R example
getwd()
# Joining shapefile and data
index <- match(NUTS3$NUTS_ID, geoid)
#length(index)
#NUTS3$NUTS_ID[is.na(index)]
#NUTS3$X2015 = NUTS3$ev_GB00t14
#NUTS3$X2015 <- productivityUK[index, "X2015"]
#summary(vvv)
deciles=quantile(vvv, prob = c(0.1, 0.2, 0.3,0.4,0.5,0.6,0.7,0.8,0.9),na.rm=TRUE)
#print(deciles)
#length(NUTS3$NUTS_ID)
NUTS3$X2015 <- vvv[index]
# Defining colour options as a function
library(RColorBrewer)
clist=brewer.pal(10, 'PRGn')
#clist=c("#053061","#2166ac","#4393c3","#92c5de","#d1e5f0","#fddbc7","#f4a582","#d6604d","#b2182b","#67001f")
color_prod <- function(x,dec) {
if (is.na(x)) {
col <- "#ffffff"
}
else if (x > dec[9]) {
col <- clist[10]
}
else if (x > dec[8]) {
col <- clist[9]
}
else if (x > dec[7]) {
col <- clist[8]
}
else if (x > dec[6]) {
col <- clist[7]
}
else if (x > dec[5]) {
col <- clist[6]
}
else if (x > dec[4]) {
col <- clist[5]
}
else if (x > dec[3]) {
col <- clist[4]
}
else if (x > dec[2]) {
col <- clist[3]
}
else if (x > dec[1]) {
col <- clist[2]
}
else {
col <- clist[1]
}
return(col)
}
# Applying colour options
NUTS3$col <- sapply(NUTS3$X2015, color_prod,dec=deciles)
NUTS3$col[!is.na(index)]
# Dropping non-UK cells
# only use cells that have data - this is how we drop all other NUTS regions
UKnuts3<-subset(NUTS3, !is.na(X2015))
#UKnuts3<-NUTS3
##### 2015 Productivity Map, UK, formatted ##################################
# Defining the map plot
par(mar=c(0.8,0.8,0.8,0.8), bg="white")
plot(0:1, 0:1, type="n", xlab="", ylab="", axes=FALSE, asp=1)
# Adding cloropleth map
par(new=TRUE, plt=c(0, .9, 0.08, 1))
plot(UKnuts3, col=UKnuts3$col,border=NA)
#plot(UKnuts3, col=UKnuts3$col, border=NA)
# Defining legend
par(new=TRUE, plt=c(0, 0.9, .03, .23))
plot(0:1, 0:1, type="n", xlab="", ylab="", asp=1, axes=FALSE)
col <- clist
breaks <- sprintf(fstring,deciles*1)
breaks
rect_width <- 2.5 / length(col)
xleft <- 0:(length(col)-1) * rect_width
ybottom <- rep(.25, length(col))
xright <- 1:length(col) * rect_width
ytop <- rep(.35, length(col))
# Adding legend to map
rect(xleft, ybottom, xright, ytop, col=col, border="#e0e0e0", lwd=.5)
text(1:(length(col)-1) * rect_width, .2, labels = breaks, cex=0.5,srt=0)
text(1:1 * rect_width*5, 0.05, labels = lll, cex=0.5,srt=0)
#>>>>>>>
#plot(runif(100),runif(100))
#p=grid.echo()
p <- recordPlot()
return(p)
}
#print(p)
#Clear the memory
#rm(list=ls())
#Download some important packages
library(maps)
library(mapdata)
library(maptools)
library(rgdal)
library(ggmap)
library(ggplot2)
library(rgeos)
library(broom)
library(plyr)
#install.packages('rgeos', type='source')
#install.packages('rgdal', type='source')
#Load the shapefile - make sure you change the filepath to where you saved the shapefiles
#shapefile <- readOGR(dsn="NUTS_Level_2__January_2015__Boundaries-shp", layer="NUTS_Level_2__January_2015__Boundaries")
shapefile <- readOGR(dsn="../../Clean Growth Report 2017/code/R example/R example", layer = "nuts3_withid")
#Reshape for ggplot2 using the Broom package
#mapdata <- tidy(shapefile, region="nuts215nm") #This might take a few minutes
mapdata <- tidy(shapefile, region="NUTS_ID") #This might take a few minutes
#Check the shapefile has loaded correctly by plotting an outline map of the UK
#gg <- ggplot() + geom_polygon(data = mapdata, aes(x = long, y = lat, group = group), color = "#FFFFFF", size = 0.25)
#gg <- gg + coord_fixed(1) #This gives the map a 1:1 aspect ratio to prevent the map from appearing squashed
#print(gg)
#Create some data to use in the heatmap - here we are creating a random "value" for each county (by id)
#mydata <- data.frame(id=unique(mapdata$id), value=sample(c(0:100), length(unique(mapdata$id)), replace = TRUE))
#Join mydata with mapdata
df <- mapdata %>% left_join( xlook, by=c("id"="geo_code"))
df <- mapdata %>% left_join( nuts2, by=c("nuts2"="nuts2"))
View(df)
df <- mapdata %>% left_join( xlook, by=c("id"="geo_code"))
View(df)
df <- mapdata %>% inner_join( xlook, by=c("id"="geo_code"))
View(df)
View(df)
df <- df %>% left_join( nuts2, by=c("nuts2"="nuts2"))
nuts2mapper=function(df,value,label){
#Create the heatmap using the ggplot2 package
df['value']=df[value]
gg <- ggplot() + geom_polygon(data = df, aes(x = long, y = lat, group = group, fill = value), color = NA, size = 0.1)
gg <- gg + scale_fill_gradient2(low = "black", mid = "blue", high = "green", na.value = "white") + labs(fill = label)
gg <- gg + coord_fixed(1)
gg <- gg + theme_minimal()
gg <- gg + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), )
gg <- gg + theme(axis.title.x=element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank())
gg <- gg + theme(axis.title.y=element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank())
#print(gg)
return(gg)
}
p1=nuts2mapper(df,value="cleanOinnos",label="Share of clean (in %)")
p2=nuts2mapper(df,value="covidOinnos",label="Share of clean (in %)")
p3=nuts2mapper(df,value="innos_sh",label="Share of region in total UK innovations (in %)")
#p1=nuts2_map(nuts3dat$cleanOinnos,  "%",nuts3dat$nuts3,fstring="%2.2f")
#p2=nuts2_map(nuts3dat$covidOinnos,  "%",nuts3dat$nuts3,fstring="%2.2f")
#p3=nuts2_map(nuts3dat$innos_shares, "%",nuts3dat$nuts3,fstring="%2.2f")
library(cowplot)
library(ggplot2)
library(ggplot2)
p=ggplot(nuts2, aes(x=innos_sh))+geom_point(aes(y=covidOinnos,color="Share Covid"))+
geom_point(aes(y=cleanOinnos,color="Share Clean")) +theme_minimal()+
geom_smooth(method = "lm", se = T,aes(y=covidOinnos,color="Share Covid")) +  labs(color = "") +
geom_smooth(method = "lm", se = T,aes(y=cleanOinnos,color="Share Clean"))+ylab("%")+xlab("Share of UK innovation in %")
plot_grid(p1, p2, p3,p4,labels=c("Cleantech Share","COVID related Share ", "Distribution of Innovation"),
label_size=10,nrow=2,ncol=2,rel_widths = c(1,1,1,1),rel_heights=c(1,1))
library(ggplot2)
p=ggplot(nuts2, aes(x=innos_sh))+geom_point(aes(y=covidOinnos,color="Share Covid"))+
geom_point(aes(y=cleanOinnos,color="Share Clean")) +theme_minimal()+
geom_smooth(method = "lm", se = T,aes(y=covidOinnos,color="Share Covid")) +  labs(color = "") +
geom_smooth(method = "lm", se = T,aes(y=cleanOinnos,color="Share Clean"))+ylab("%")+xlab("Share of UK innovation in %")
p
p4=ggplot(nuts2, aes(x=innos_sh))+geom_point(aes(y=covidOinnos,color="Share Covid"))+
geom_point(aes(y=cleanOinnos,color="Share Clean")) +theme_minimal()+
geom_smooth(method = "lm", se = T,aes(y=covidOinnos,color="Share Covid")) +  labs(color = "") +
geom_smooth(method = "lm", se = T,aes(y=cleanOinnos,color="Share Clean"))+ylab("%")+xlab("Share of UK innovation in %")
p1
plot_grid(p1, p2, p3,p4,labels=c("Cleantech Share","COVID related Share ", "Distribution of Innovation"),
label_size=10,nrow=2,ncol=2,rel_widths = c(1,1,1,1),rel_heights=c(1,1))
plot_grid(p1, p2, p3,p4,labels=c("Cleantech Share","COVID related Share ", "Distribution of Innovation"),
label_size=10,nrow=2,ncol=2,rel_widths = c(1,1,1,1),rel_heights=c(1,1,1,1))
p3
#gl_clean=filter(globalshares,Category=="Grey+Clean")$inno_sh
#gl_covid=
#nuts3dat=nuts3dat %>% mutate(cleanOinnos=(cleaninnos_shares/innos_shares-1)*100,covidOinnos=(covidinnos_shares/innos_shares-1)*100 )
p1=nuts2mapper(df,value="cleanOinnos",label="% within area")
p2=nuts2mapper(df,value="covidOinnos",label="% within area")
p3=nuts2mapper(df,value="innos_sh",label="% of UK")
#p1=nuts2_map(nuts3dat$cleanOinnos,  "%",nuts3dat$nuts3,fstring="%2.2f")
#p2=nuts2_map(nuts3dat$covidOinnos,  "%",nuts3dat$nuts3,fstring="%2.2f")
#p3=nuts2_map(nuts3dat$innos_shares, "%",nuts3dat$nuts3,fstring="%2.2f")
library(cowplot)
library(ggplot2)
library(ggplot2)
p4=ggplot(nuts2, aes(x=innos_sh))+geom_point(aes(y=covidOinnos,color="Share Covid"))+
geom_point(aes(y=cleanOinnos,color="Share Clean")) +theme_minimal()+
geom_smooth(method = "lm", se = T,aes(y=covidOinnos,color="Share Covid")) +  labs(color = "") +
geom_smooth(method = "lm", se = T,aes(y=cleanOinnos,color="Share Clean"))+ylab("%")+xlab("Share of UK innovation in %")
plot_grid(p1, p2, p3,p4,labels=c("Cleantech Share","COVID related Share ", "Distribution of Innovation"),
label_size=10,nrow=2,ncol=2,rel_widths = c(1,1,1,1),rel_heights=c(1,1,1,1))
p1=nuts2mapper(df,value="cleanOinnos",label="% within area")+  theme(legend.key.size = unit(0.2, "cm"))
p1
p1=nuts2mapper(df,value="cleanOinnos",label="% within area")+  theme(legend.key.size = unit(0.4, "cm"))
p1
library(ggplot2)
p4=ggplot(nuts2, aes(x=innos_sh))+geom_point(aes(y=covidOinnos,color="Share Covid"))+
geom_point(aes(y=cleanOinnos,color="Share Clean")) +theme_minimal()+
geom_smooth(method = "lm", se = T,aes(y=covidOinnos,color="Share Covid")) +  labs(color = "") +
geom_smooth(method = "lm", se = T,aes(y=cleanOinnos,color="Share Clean"))+ylab("%")+xlab("Share of UK innovation in %")+
theme(legend.key.size = unit(0.4, "cm"))
#gl_clean=filter(globalshares,Category=="Grey+Clean")$inno_sh
#gl_covid=
#nuts3dat=nuts3dat %>% mutate(cleanOinnos=(cleaninnos_shares/innos_shares-1)*100,covidOinnos=(covidinnos_shares/innos_shares-1)*100 )
p1=nuts2mapper(df,value="cleanOinnos",label="% within area")+ theme(legend.key.size = unit(0.4, "cm"))
p2=nuts2mapper(df,value="covidOinnos",label="% within area")+ theme(legend.key.size = unit(0.4, "cm"))
p3=nuts2mapper(df,value="innos_sh",label="% of UK")+ theme(legend.key.size = unit(0.4, "cm"))
#p1=nuts2_map(nuts3dat$cleanOinnos,  "%",nuts3dat$nuts3,fstring="%2.2f")
#p2=nuts2_map(nuts3dat$covidOinnos,  "%",nuts3dat$nuts3,fstring="%2.2f")
#p3=nuts2_map(nuts3dat$innos_shares, "%",nuts3dat$nuts3,fstring="%2.2f")
library(cowplot)
library(ggplot2)
plot_grid(p1, p2, p3,p4,labels=c("Cleantech Share","COVID related Share ", "Distribution of Innovation"),
label_size=10,nrow=2,ncol=2,rel_widths = c(1,1,1,1),rel_heights=c(1,1,1,1))
plot_grid(p1, p2, p3,p4,labels=c("Cleantech Share","COVID related Share ", "Distribution of Innovation"),
label_size=10,nrow=2,ncol=2,rel_widths = c(1,1,1,1),rel_heights=c(1,1,1,1))
View(shapefile)
knit_with_parameters('C:/Users/Ralf Martin/Dropbox/clean growth in developping countries/code/proposal.Rmd')
library(dplyr)
library(tidyr)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
getwd()
library(dplyr)
#rr=read_csv("../../data/Final/Panel_Bvdid_Monthly_Twittertext_Financials.csv")
rr=read_csv("https://www.dropbox.com/s/s55sbxgyw86lhxo/Bvdid_Q2_2019_vs_Q2_2020_Twittertext.csv?dl=1") %>%
select(starts_with("operating"),
BVDidnumber,starts_with("number"),industry,NAICS_Core,
twitterhandle,starts_with("lab_prod"))
rr %>% distinct(industry)
rr %>% distinct(NAICS_Core)
rrl=read_csv("https://www.dropbox.com/s/n91zs2y9g4xfzhg/FullPanel_Financials%26Dates-GB_long.csv?dl=1")
#Note that by loading data from dropbox linkages the code can easily migrate between different computers.
rrl %>% filter(!is.na(lab_prod)) %>% group_by(year) %>% summarise(n())
rrl%<>% group_by(NAICS_Core,year) %>%
mutate(id_xx = group_indices() ,
RELlnrOl = log(lab_prod)-mean(log(lab_prod),na.rm = T)  )
library(gtools)
avrrl=rrl %>% group_by(twitterhandle) %>% filter(!is.na(lab_prod) & year<2019&year>2016) %>%
summarise(RELlnrOl=mean(RELlnrOl,na.rm = T),maxy=max(year,na.rm=T),miny=min(year,na.rm=T)) %>%
mutate(topid=RELlnrOl>0) %>% filter(!is.na(RELlnrOl))  %>%
filter(maxy>2016 & is.finite(RELlnrOl)) %>% ungroup() %>%
mutate(RELlnrOl_qrt=quantcut(RELlnrOl, q=4, na.rm=TRUE,names=F),
RELlnrOl_qrt=factor(RELlnrOl_qrt,labels=seq(25,100,25)))
aavrll=avrrl %>% group_by(topid) %>% summarise(nn=n()) %>% mutate(nnnn=sum(nn))
