summarise_at(vars(elec,coal,oil,water,zenvmgt_index_Opt4,zets_anticip,zets_rational),mmean)
grr  =function(x) ifelse(x+dplyr::lag(x)==0,0,(x-dplyr::lag(x))/(x+dplyr::lag(x))*2)
dd=function(x) (x-dplyr::lag(x))
dd1P=function(x) (log(1+x)-log(1+dplyr::lag(x)))
etsby=etsf %>%    group_by(uniqid,preid,etsfirm,nace) %>%
summarise_at(vars(elec,coal,oil,water,year),mmean)     %>%
arrange(uniqid,-preid) %>% group_by(uniqid) %>%
mutate(grcoal=grr(coal),groil=grr(oil),grelec=grr(elec),grwater=grr(water),
ddcoal=dd(coal),ddoil=dd(oil),ddelec=dd(elec),ddwater=dd(water),
dd1Pcoal=dd1P(coal),dd1Poil=dd1P(oil),dd1Pelec=dd1P(elec),dd1Pwater=dd1P(water))
qs=function(x) {
ddd=etsfpre %>% ungroup()
qvar=x#[ddd$etsfirm==1]
cut(x, breaks = c(-1,as.vector(quantile(qvar,probs=c(.5,1) ,na.rm=T))),
labels=c("50","100"))
}
#aaa=quantile(etsfpre$oil,probs=c(.2,.6))
#as.vector(aaa)
#test=etsfpre %>% ungroup() %>%  mutate(tt=qs(oil))
#gg=test %>% filter(tt=="100")
etsfpre=etsfpre %>% ungroup() %>%  mutate(qoil=qs(oil),manage=qs(zenvmgt_index_Opt4),rational=qs(zets_rational), anticip =qs(zets_anticip),
qcoal=qs(coal),
qelec=qs(elec),
qwater=qs(water)) %>%
select(uniqid,qcoal,qelec,qwater,qoil,manage,rational,anticip)
etsf=etsf %>% inner_join(etsfpre,by="uniqid")
etsbyXpre=etsby %>% inner_join(etsfpre,by="uniqid")
#etsbyX#
etsf=etsf %>% mutate(inETS=(etsfirm==1 & year>=2013 & fp_hubei==0 ) | (etsfirm==1 & year>=2013 &fp_hubei==1 ))
#names(etsf)
#lm(coal~inETS+factor(year),etsf) %>% summary()
library(fixest)
df=etsf %>% select(preid , coal,inETS,uniqid,year,qcoal,qelec,qwater,qoil,oil,elec,water,manage,
rational,anticip,
ends_with("coal"),ends_with("oil") ,ends_with("elec"),
ends_with("water"),
etsfirm)
df=do.call(data.frame,lapply(df, function(x) replace(x, is.infinite(x),NA)))
#df= df %>% mutate()
#df=df %>% filter(qcoal==100)
table(df$year)
df=df %>% group_by(uniqid) %>% mutate(miny=min(year),maxy=max(year),
inETSXtop=inETS*(qcoal=="100"),
inETS=as.numeric(inETS))
df%<>%filter(miny<2013&maxy>=2013)
df%<>%mutate(rationl=ifelse(etsfirm==0,0,rational),rationl=ifelse(anticip==0,0,anticip))
obsdelta=etsbyXpre %>% filter(!is.na(grcoal)) %>%   group_by(etsfirm,manage)  %>% dplyr::summarise(nn=n())
obs=df %>% filter(!is.na(coal)) %>%  group_by(etsfirm,manage) %>% dplyr::summarise(nn=n())
firms=df %>% filter(!is.na(coal)) %>%  distinct(uniqid,.keep_all=T) %>%
group_by(etsfirm,manage) %>% dplyr::summarise(nn=n())
set.seed(1206)
q <- data.frame(p = rep(c("A","B"),each = 10,len = 30),
a = rep(c(1,2,3),each = 10),
id = seq(30),
b = round(runif(30,10,20)),
c = round(runif(30,40,70)))
library(tables)
tab <- tabular((Factor(etsfirm)*Factor(manage)+1) ~ (N = 1) + (coal + oil + elec + water) * (mean + sd),
data = etsbyXpre %>% filter(preid))
ttt1=tab[ tab[,1] > 0, ]
library(kableExtra)
library(Hmisc)
dtable=function(fuel){
#fuel="coal"
qfuel=paste0("q",fuel)
nn=paste("n",fuel)
nm=paste("m",fuel)
ff=etsbyXpre   %>%
group_by(etsfirm,!!sym(qfuel)) %>%
summarise( n=n(),
m=mean(!!sym(fuel)) )
}
res=dtable("coal") %>% rename(ncoal=n,mcoal=m)
res=bind_cols(res,dtable("oil")  %>% rename(noil=n,moil=m))
res=bind_cols(res,dtable("elec") %>% rename(nelec=n,melec=m))
res=bind_cols(res,dtable("water") %>% rename(nwater=n,mwater=m))
tab <- tabular((Factor(etsfirm)*Factor(qcoal)+1) ~ (N = 1) + (coal) * (mean + sd)
data = etsbyXpre %>% filter(preid))
tttcoal=tab[ tab[,1] > 0, ]
tab <- tabular((Factor(etsfirm)*Factor(qoil)+1) ~ (N = 1) + (oil) * (mean + sd),
data = etsbyXpre %>% filter(preid))
tttoil=tab[ tab[,1] > 0, ]
tab <- tabular((Factor(etsfirm)*Factor(qelec)+1) ~ (N = 1) + (elec) * (mean + sd),
data = etsbyXpre %>% filter(preid))
tttelec=tab[ tab[,1] > 0, ]
tab <- tabular((Factor(etsfirm)*Factor(qwater)+1) ~ (N = 1) + (water) * (mean + sd),
data = etsbyXpre %>% filter(preid))
tttwater=tab[ tab[,1] > 0, ]
library(ggplot2)
library(ggridges)
library(gridExtra)
library(grid)
library(png)
#library(downloader)
#library(grDevices)
#library(plyr)
#etsfirm=recode(factor(etsfirm),`0`="non ETS",
#`1`="ETS"),etsfirm=relevel(etsfirm,ref="non ETS"),
etsbyXpre=etsbyXpre %>% mutate(etsfirm=factor(etsfirm))
test=etsbyXpre%>%mutate(      etsfirm=relevel(etsfirm,ref="0"))
etsbyXpre=test %>%   mutate(                 etsfirm=recode(etsfirm,
`0`  = "Non ETS",
`1` = "ETS" ),
manage=recode(manage,
`50`  = "Below Median",
`100` = "Above Median" ))
#etsbyXpre <- within(etsbyXpre, etsfirm <- relevel(etsfirm, ref = "non ETS"))
grpics=function(x,label=""){
etsbyXpre["xxx"]=etsbyXpre[x]
mmn=mean(etsbyXpre$xxx)
mms=as.character(mmn)
etsbyXpre %>%   ggplot() + xlab(label)+ ylab("Management Quality") +
scale_fill_discrete( name = "" , labels=) +
geom_density_ridges(  aes(x = xxx, y=manage,  fill = factor(etsfirm)),alpha=.3,scale=1.1) +
theme_minimal()  + theme(legend.position="bottom")+ annotate("text", x=mmn, y=2, label= mms)
}
p1=grpics("grcoal", label="Growth of Coal")
p2=grpics("groil",  label="Growth of Oil")
p3=grpics("grelec", label="Growth of Electricity")
p4=grpics("grwater",label="Growth of Water")
g_legend<-function(a.gplot){
tmp <- ggplot_gtable(ggplot_build(a.gplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)}
mylegend<-g_legend(p1)
grid.arrange(arrangeGrob(p1 + theme(legend.position="none"),
p2 + theme(legend.position="none"),
p3 + theme(legend.position="none"),
p4 + theme(legend.position="none"),
nrow=2),
mylegend, nrow=2,heights=c(10, 1))
create_post("etschina")
library(distill)
create_post("etschina")
create_post("cleanrta")
# dropbox finder ####
finddropb=function(){
if (Sys.info()['sysname'] == 'Darwin') {
info <- RJSONIO::fromJSON(
file.path(path.expand("~"),'.dropbox','info.json'))
}
if (Sys.info()['sysname'] == 'Windows') {
info <- RJSONIO::fromJSON(
if (file.exists(file.path(Sys.getenv('APPDATA'), 'Dropbox','info.json'))) {
file.path(Sys.getenv('APPDATA'), 'Dropbox', 'info.json')
} else {
file.path(Sys.getenv('LOCALAPPDATA'),'Dropbox','info.json')
}
)
}
return(info$personal$path)
}
finddropb
finddropb()
library(dplyr)
library(tidyr)
knitr::opts_chunk$set(echo = FALSE, message=FALSE)
library(cowplot)
fig_svg<-cowplot::ggdraw()+cowplot::draw_image("showtweetsall.svg")
plot(fig_svg)
?cowplot
?draw_image
?ggdraw
?draw_image
library(cowplot)
fig_svg<-cowplot::ggdraw()+cowplot::draw_image("showtweetsall.svg",height=10)
plot(fig_svg)
library(cowplot)
fig_svg<-cowplot::ggdraw()+cowplot::draw_image("showtweetsall.svg",height=10,width=15)
plot(fig_svg)
library(cowplot)
fig_svg<-cowplot::ggdraw()+cowplot::draw_image("showtweetsall.svg",height=1,width=1)
plot(fig_svg)
library(cowplot)
fig_svg<-cowplot::ggdraw()+cowplot::draw_image("showtweetsall.svg",height=2,width=2)
plot(fig_svg)
?ggdraw
install.packages("rsvg")
library(rsvg)
library(magick)
tiger <- image_read_svg('http://jeroen.github.io/images/tiger.svg', width = 400)
print(tiger)
tiger <- image_read_svg("showtweetsall.svg", width = 400)
print(tiger)
plot(tiger)
?image_read_svg
tiger <- image_read_svg("showtweetsall.svg", width = 800)
plot(tiger)
tiger <- image_read_svg("showtweetsall.svg", width = 1600)
plot(tiger)
library(cowplot)
fig_svg<-cowplot::ggdraw()+cowplot::draw_image("showtweetsall.svg",height=1,width=1)
plot(fig_svg)
#install.packages("rsvg")
library(rsvg)
library(magick)
tiger <- image_read_svg("showtweetsall.svg", height  = 1600)
plot(tiger)
#install.packages("rsvg")
library(rsvg)
library(magick)
tiger <- image_read_svg("showtweetsall.svg", height  = 1600)
plot(tiger)
#install.packages("rsvg")
library(rsvg)
library(magick)
tiger <- image_read_svg("showtweetsall.svg", height  = 2000)
plot(tiger)
#install.packages("rsvg")
library(rsvg)
library(magick)
tiger <- image_read_svg("showtweetsall.svg", height  = 2000)
plot(tiger)
#install.packages("rsvg")
library(rsvg)
library(magick)
tiger <- image_read_svg("showtweetsall.svg", height  = 2000)
plot(tiger)
#install.packages("rsvg")
library(rsvg)
library(magick)
tiger <- image_read_svg("showtweetsall.svg", height  = 2000)
plot(tiger)
#install.packages("rsvg")
library(rsvg)
library(magick)
tiger <- image_read_svg("showtweetsall.svg", height  = 2000)
plot(tiger)
library(dplyr)
library(tidyr)
knitr::opts_chunk$set(echo = FALSE, message=FALSE)
finddropb=function(){
library(jsonlite)
file_name<-list.files(paste(Sys.getenv(x = "APPDATA"),"Dropbox", sep="/"), pattern = "*.json", full.names = T)
if (length(file_name)==0){
file_name<-list.files(paste(Sys.getenv(x = "LOCALAPPDATA"),"Dropbox", sep="/"), pattern = "*.json", full.names = T)}
file_content<-fromJSON(txt=file_name)$personal
file_content<-file_content$path
return(file_content)
}
# Get big dataset
library(readr)
library(rdrop2)
library(lubridate)
#test <- drop_read_csv("twitter/results/twox/twox_userXprod.csv")
#twox_userXprod=read_csv("https://www.dropbox.com/s/yumnnlz6vlnjdp1/twox_userXprod.csv?dl=1")
twox_userXprod=read_csv("../../temp/twox_userXprod.csv")
twox_user=read_csv("../../temp/twox_user.csv")
twox_user=twox_user%>% filter(year(week)<=2020)
agg=twox_user%>% group_by(week) %>%  mutate(twox=twox8) %>%
summarise(sumtwox =sum(twox),
p95twox =quantile(twox,probs=c(0.95)),
p05twox =quantile(twox,probs=c(0.75)),
meantwox = mean(twox),meantwoxsuccess=mean(twoxsuccess),
meantwoxsh= mean(twox/words),
sumwords=sum(words),meanwords=mean(words) )
("
Here we aggregate the weekly sums of twox acrros twitter handles. `meantwox` is
consequently average weekly twox across users. A users who writes tweets totalling 100 words that are new
would have a twox of 100
")
probs=c(0.95,0.5,0.05)
aggtiles=twox_user %>% group_by(week) %>%
summarise(twoxtiles =quantile(twox,probs=probs)) %>%
mutate(probs=probs )
library(lubridate)
library(ggplot2)
library(gridExtra)
p1=ggplot(agg %>% filter(year(week)>2000    & week<max(week)              ),
aes(x=week,y=meantwox))+
geom_line( size=1, color="blue")+theme_minimal()+
#geom_line(aes(y=p95twox,x=week,color="p95"),alpha=.3)+
#geom_line(aes(y=p05twox,x=week,color="p75"),alpha=.3 )+
ggtitle("(a) Average Twitnovation Index")+
scale_color_discrete( name = "")+ylab("Twitnovation index")+xlab("Week")
p2=ggplot(agg %>% filter(year(week)>2000    & week<max(week)              ),
aes(x=week,y=meantwoxsuccess))+
geom_line(size=1,color="green" )+theme_minimal()+
ggtitle("(b) Average Twitnovation success")+
scale_color_discrete( name = "")+ylab("Words")
p3=ggplot(agg %>% filter(year(week)>2000    & week<max(week)              ),
aes(x=week,y=meanwords))+
geom_line(size=1 )+theme_minimal()+
ggtitle("(c) Average weekly number of words")+
scale_color_discrete( name = "")+ylab("Words")
p4=ggplot(agg %>% filter(year(week)>2000    & week<max(week)              ),
aes(x=week,y=meantwoxsh*100))+
geom_line(size=1,color="orange" )+theme_minimal()+
ggtitle("(d) Av. share of twitnovative words")+
scale_color_discrete( name = "")+ylab("%")
grid.arrange(p1, p2, p3, p4, nrow = 2)
# Get the productivity data
avrrl=read_csv("../../temp/avrrl.csv")
atwox_user=twox_user %>% mutate(year=year(week)) %>%  group_by(user_name,year) %>%
summarise(meantwoxsh=mean(twoxsh),meantwox=mean(twox),
meantwoxsuccess=mean(twoxsuccess),
meannnewsh=mean(nnewsh),meanwords=mean(words),
sumtwox=sum(twox),sumwords=sum(words))
atwox_user=atwox_user %>%  group_by(user_name) %>%
mutate(Dmeantwoxsh=meantwoxsh-dplyr::lag(meantwoxsh),
Dmeantwox=meantwox-dplyr::lag(meantwox),
Lmeantwox=dplyr::lag(meantwox),
Dmeanwords=meanwords-dplyr::lag(meanwords),
Lmeanwords=dplyr::lag(meanwords))
atwox_userXprod=atwox_user %>%
inner_join(avrrl,by=c("user_name"="twitterhandle")) %>%
mutate(RELlnrOl_qrt=as.numeric(RELlnrOl_qrt)) %>%
ungroup()  %>% filter(year>=2018) %>%
mutate(fyear=factor(year),fyear=relevel(fyear,2)) %>%
mutate(sumtwoxOsumwords=sumtwox/sumwords) %>%
filter(sumwords>0 & sumtwox>0 ) %>%
filter(industry!="0" & industry!="NA")
set.seed(123)
library(WRS2) # for data
library(afex) # to run anova
library(ggstatsplot)
library(ggridges)
ff=atwox_userXprod #%>% filter(year==2019)
means <- aggregate(meantwox ~  industry, ff, mean)
ggplot(data=ff, aes(x=industry, y=meantwox, color=industry)) + geom_boxplot() +
stat_summary(fun=mean, colour="darkred", geom="point",
shape=18, size=4, show.legend=FALSE) +
ylim(0,50)+  coord_flip() +theme_minimal() +xlab("")+ylab("Average weekly Twitnovation")+
theme(legend.position = "none")
ggplot(atwox_userXprod %>% filter(year>2017),
aes(x = (meantwox), y = RELlnrOl ,color=factor(year)),alpha=.2) +
geom_point(alpha=.3)+ theme_minimal()+
geom_smooth(method="lm",alpha=.1)+xlab("Twitnovation index")+ylab("Productivity relative to sector average")
library(fixest)
r1=feols(fml=RELlnrOl~meantwox*fyear                   | factor(industry)   , data=atwox_userXprod,se="cluster",cluster="user_name")
r2=feols(fml=RELlnrOl~meantwox+meanwords+fyear         | factor(industry)   , data=atwox_userXprod,se="cluster",cluster="user_name")
r3=feols(fml=RELlnrOl_qrt~meantwox+meanwords+fyear     | factor(industry)   , data=atwox_userXprod,se="cluster",cluster="user_name")
r4=feols(fml=RELlnrOl~meantwox+meantwoxsuccess+fyear   | factor(industry)   , data=atwox_userXprod,se="cluster",cluster="user_name")
clusts=nrow(atwox_userXprod %>% distinct(user_name))
library(expss)
library(fixest)
xdict=c(meantwox="TWOX",fyear2018="2018",fyear2020="2020",meanwords="Words",
user_name="Twitter Handle",meantwoxsuccess="TWOX Success",
RELlnrOl="Relative log(R/L)",RELlnrOl_qrt="Relative log(R/L) quartiles")
etable(r1,r2,r3,r4,signifCode = c("***" = 0.01, "**" = 0.05,"*"=0.1),
drop = c("^2018","^2020","(Intercept)"),
fitstat=c("n",'r2'), sdBelow = TRUE,
dict=xdict,fixef_sizes=T) #%>% htmlTable()
#etable(m1,m2,m3,m4,signifCode = c("***" = 0.01, "**" = 0.05,"*"=0.1))
library(dplyr)
ggplot(atwox_userXprod ,
aes(x = (meantwox), y = RELlnrOl ),alpha=.01) +
geom_point(alpha=.1,size=.1)+ theme_minimal()+
geom_smooth(method="lm",alpha=.1)+xlab("Twitnovation index")+
ylab("Productivity relative to sector average")+
facet_wrap(~industry,ncol=4,scales="free")+
theme(strip.text = element_text(size = 7))
atwox_userXprod=atwox_userXprod %>% mutate(findustry=factor(industry))
reg=lm(RELlnrOl~0+factor(industry)+meantwox:findustry+fyear,
data=atwox_userXprod %>% filter(year>=2018)) #%>% summary()
#reg %>% summary()
plotc=function(vstring){
library(jtools)
library(broom)
ilables=atwox_userXprod %>% distinct(industry) %>% arrange(industry)
i=0
for(ii in ilables$industry){
i=i+1
cc=paste0(vstring,ii)
if(i==1){
vec=c(cc)
}else {
vec=c(vec,cc)
}
}
names(vec)=ilables$industry
return(plot_summs(reg, scale = T,coefs = vec))
}
plotc("meantwox:findustry")+ xlim(-.8, .80)
ggplot(atwox_userXprod %>% filter(year==2020),
aes(x = Dmeantwox, y = RELlnrOl ),color="blue",alpha=0.2) +
geom_point(color="blue",alpha=0.2)+ theme_minimal()+
geom_smooth(method="lm")+ylab("Relative productivity")+
xlab("Change in twitnovation 2020-2019")
atwox_userXprod=atwox_userXprod %>% mutate(findustry=factor(industry))
reg=lm(RELlnrOl~0+factor(industry)+Dmeantwox:findustry,
data=atwox_userXprod %>% filter(year==2020)) #%>% summary()
#reg %>% summary()
plotc=function(vstring){
library(jtools)
library(broom)
ilables=atwox_userXprod %>% distinct(industry) %>% arrange(industry)
i=0
for(ii in ilables$industry){
i=i+1
cc=paste0(vstring,ii)
if(i==1){
vec=c(cc)
}else {
vec=c(vec,cc)
}
}
names(vec)=ilables$industry
return(plot_summs(reg, scale = T,coefs = vec))
}
plotc("Dmeantwox:findustry")+ xlim(-1, 1)
monthly=twox_userXprod %>%
group_by( month ,user_name) %>%
summarise(meantwox=mean(twox),meanwords=mean(words))
monthly=monthly %>%  arrange(month,-meantwox) %>%
mutate(uni=runif(n()),
maxtwox=max(meantwox),
twoxrank=1:n(),
twoxp90=quantile(meantwox,probs=0.9))
monthlytop=twox_userXprod %>%   filter(topid==T) %>%
group_by( month ,user_name) %>%
summarise(meantwox=mean(twox),meanwords=mean(words))
monthlytop=monthlytop  %>%  arrange(month,-meantwox) %>%
mutate(uni=runif(n()),
maxtwox=max(meantwox),
twoxrank=1:n(),
twoxp90=quantile(meantwox,probs=0.9))
maxusersmeantwox=monthly %>% filter(twoxrank<=2)
maxusersmeantwoxtop=monthlytop %>% filter(twoxrank<=2)
twitnovator=function(maxusers){
library(timevis)
library(readr)
library(dplyr)
maxusers=maxusersmeantwox
maxusers=maxusers %>% mutate( hrefs=paste0('<a href="https://twitter.com/',user_name,'" target="_blank">',user_name,'</a>'))
xmaxusers=maxusers %>% filter(month>"2017-12-01")
data <- data.frame(
id      = 1:nrow(xmaxusers),
content = xmaxusers$hrefs,
start   = xmaxusers$month,
end     = NA
)
timevis(data)
}
# Load new words dataset
dropb=finddropb()
tweets_with_twitno=read_csv(paste0(dropb,"\\twitter\\results\\twox\\tweets_with_twitno.csv"),col_types="cccnT")
#tweets_with_twitno %>% names()
# add productivity info
("
We combine info on the first occurence of a string with productivity data
")
twitnoXprod=twox_userXprod %>% select(user_name,RELlnrOl,industry) %>%
distinct() %>%  # get just one year of productivity data
inner_join(tweets_with_twitno) %>%  # add the info on new tweets
group_by(word) %>% arrange(pdate) %>% filter(row_number()==1) %>%  # lets get the earliest
group_by(month(pdate),industry) %>%  # account for temporal and industry hetero
mutate(critXcrit=total_word_sum,meancrit=(critXcrit-mean(critXcrit))/sd(critXcrit)) %>%
mutate(y=runif(n()) ,
p99crit=quantile(critXcrit,probs=c(0.75)))
library(tidyverse)
library(xml2)
#df %>% nrow()
#tse=df %>% ungroup() %>% distinct(industry)
df=  twitnoXprod%>% mutate(quart=lubridate::semester(pdate, with_year = T)) %>% filter(industry!="0") %>%
arrange(industry,quart,-meancrit) %>%  group_by(industry,quart) %>% mutate(nn=1:n())
library(lubridate)
df=df %>%  filter(year(pdate)>2017  &   nn==1 )
name="showtweetsall.svg"
#showtweets=function(df,name){
#name="ddd.svg"
twitnoXprodx=df %>%
mutate(hrefx=paste0("https://twitter.com/",
user_name,"/status/",tweet_id)) %>%
mutate(critXcrit=ifelse(critXcrit>p99crit,p99crit,critXcrit))
library(ggrepel)
library(grid)
set.seed(42)
p1=ggplot(twitnoXprodx, aes(x=pdate,y=RELlnrOl,
#size=two,
))+
geom_text_repel(aes(label=word,  color=RELlnrOl),
alpha=1,
size=2.,
max.time=10,
max.iter=40000,
max.overlaps=Inf,
segment.alpha=0.4,
segment.size=0.2,
angle=0,
#nudge_x = .15,
box.padding = 0.05,
#nudge_y = .1,
segment.curvature = 0.1,
segment.ncp = 3,
#segment.angle = 20,
force=7) +
theme_minimal()+theme(legend.position = "bottom")+
scale_color_gradient(low="blue", high="red",name="Relative Productivity")+
geom_point(aes(size=total_word_sum/1000),alpha=0.3)+
ylab("Relative Productivity")+
guides(size=guide_legend(title="Twitnovation Success (000's)"))+
xlab("")
ggsave( "tf1.svg", p1)
links <- with(twitnoXprodx, setNames(hrefx, word))
xml <- read_xml("tf1.svg")
xml %>%
xml_find_all(xpath="//d1:text") %>%
keep(xml_text(.) %in% names(links)) %>%
xml_add_parent("a", "xlink:href" = links[xml_text(.)], target = "_blank")
write_xml(xml, name)
p1
View(p1)
p1
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::update_meta_addin()
install.packages(c("arrow", "bookdown", "broom", "dbplyr", "dplyr", "dtplyr", "fixest"))
as.character(Sys.info()["nodename"])
setwd("C:\Users\rmart\OneDrive - Imperial College London\powbal_india\code")
setwd("C:/Users/rmart/OneDrive - Imperial College London/powbal_india/code")
